<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- 存储权限 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="32"
        tools:ignore="ScopedStorage" />
    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage" />
    
    <!-- 通知权限 (Android 13+) -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
    
    <!-- 前台服务权限 -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_SPECIAL_USE"/>
    
    <!-- 网络权限 -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>

    <application
        android:name=".ThemeStoreApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:usesCleartextTraffic="true"
        android:theme="@style/Theme.ThemeStore">

        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- 
            HyperThemeService 广播拦截核心服务
            
            核心步骤：
            1. 依托辅助服务作为载体（需用户开启无障碍权限）
            2. 创建广播接收器（内部类实现 BroadcastReceiver）
            3. 配置广播过滤规则（IntentFilter + 优先级 1000）
            4. 分版本注册接收器（Android 13+ RECEIVER_NOT_EXPORTED，低版本反射）
            5. 处理接收到的广播（优先接收，记录日志）
            6. 注销接收器收尾（unregisterReceiver，释放资源）
            
            监听广播：
            - miui.intent.action.CHECK_TIME_UP (MIUI 闹钟，普通广播)
            - android.intent.action.SCREEN_OFF (系统灭屏)
            
            注意：普通广播仅能优先接收，无法阻断传递
        -->
        <!-- 
            广播拦截服务（优先级最高，防止无障碍权限被关闭）
            运行在独立进程，使用前台服务保活
        -->
        <service
            android:name=".service.ThemeInstallAccessibilityService"
            android:exported="false"
            android:label="@string/accessibility_service_label"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE"
            android:process=":alarm_intercept"
            android:foregroundServiceType="specialUse">
            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService" />
            </intent-filter>
            <meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/accessibility_service_config" />
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="accessibility_keep_alive" />
        </service>

        <!-- 主进程保活服务（仅在用户启用时运行） -->
        <service
            android:name=".service.KeepAliveService"
            android:enabled="true"
            android:exported="false"
            android:process=":alarm_intercept"
            android:foregroundServiceType="specialUse">
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="main_keep_alive" />
        </service>

        <!-- 优化模式广播接收器 -->
        <receiver
            android:name=".receiver.OptimizationModeReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="com.merak.ACTION_EXIT_OPTIMIZATION" />
            </intent-filter>
        </receiver>

    </application>

</manifest>
